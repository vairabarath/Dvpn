// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: base_sync.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RemoteSuperRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TargetRegion          string                 `protobuf:"bytes,1,opt,name=target_region,json=targetRegion,proto3" json:"target_region,omitempty"`
	Count                 int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	RequiredBandWidthMbps float32                `protobuf:"fixed32,3,opt,name=required_bandWidth_mbps,json=requiredBandWidthMbps,proto3" json:"required_bandWidth_mbps,omitempty"`
	MaxLatencyMs          float32                `protobuf:"fixed32,4,opt,name=max_latency_ms,json=maxLatencyMs,proto3" json:"max_latency_ms,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RemoteSuperRequest) Reset() {
	*x = RemoteSuperRequest{}
	mi := &file_base_sync_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteSuperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSuperRequest) ProtoMessage() {}

func (x *RemoteSuperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_sync_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSuperRequest.ProtoReflect.Descriptor instead.
func (*RemoteSuperRequest) Descriptor() ([]byte, []int) {
	return file_base_sync_proto_rawDescGZIP(), []int{0}
}

func (x *RemoteSuperRequest) GetTargetRegion() string {
	if x != nil {
		return x.TargetRegion
	}
	return ""
}

func (x *RemoteSuperRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RemoteSuperRequest) GetRequiredBandWidthMbps() float32 {
	if x != nil {
		return x.RequiredBandWidthMbps
	}
	return 0
}

func (x *RemoteSuperRequest) GetMaxLatencyMs() float32 {
	if x != nil {
		return x.MaxLatencyMs
	}
	return 0
}

type SuperNodeInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NodeId             string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Ip                 string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port               string                 `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	Region             string                 `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`
	AvgLatencyMs       float32                `protobuf:"fixed32,5,opt,name=avg_latency_ms,json=avgLatencyMs,proto3" json:"avg_latency_ms,omitempty"`
	ExitPeersAvailable int32                  `protobuf:"varint,6,opt,name=exit_peers_available,json=exitPeersAvailable,proto3" json:"exit_peers_available,omitempty"`
	BandWidthMbps      float32                `protobuf:"fixed32,7,opt,name=bandWidth_mbps,json=bandWidthMbps,proto3" json:"bandWidth_mbps,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SuperNodeInfo) Reset() {
	*x = SuperNodeInfo{}
	mi := &file_base_sync_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuperNodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperNodeInfo) ProtoMessage() {}

func (x *SuperNodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_base_sync_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperNodeInfo.ProtoReflect.Descriptor instead.
func (*SuperNodeInfo) Descriptor() ([]byte, []int) {
	return file_base_sync_proto_rawDescGZIP(), []int{1}
}

func (x *SuperNodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SuperNodeInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SuperNodeInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SuperNodeInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SuperNodeInfo) GetAvgLatencyMs() float32 {
	if x != nil {
		return x.AvgLatencyMs
	}
	return 0
}

func (x *SuperNodeInfo) GetExitPeersAvailable() int32 {
	if x != nil {
		return x.ExitPeersAvailable
	}
	return 0
}

func (x *SuperNodeInfo) GetBandWidthMbps() float32 {
	if x != nil {
		return x.BandWidthMbps
	}
	return 0
}

type RemoteSuperResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuperNodes    []*SuperNodeInfo       `protobuf:"bytes,1,rep,name=super_nodes,json=superNodes,proto3" json:"super_nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoteSuperResponse) Reset() {
	*x = RemoteSuperResponse{}
	mi := &file_base_sync_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteSuperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSuperResponse) ProtoMessage() {}

func (x *RemoteSuperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_base_sync_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSuperResponse.ProtoReflect.Descriptor instead.
func (*RemoteSuperResponse) Descriptor() ([]byte, []int) {
	return file_base_sync_proto_rawDescGZIP(), []int{2}
}

func (x *RemoteSuperResponse) GetSuperNodes() []*SuperNodeInfo {
	if x != nil {
		return x.SuperNodes
	}
	return nil
}

var File_base_sync_proto protoreflect.FileDescriptor

const file_base_sync_proto_rawDesc = "" +
	"\n" +
	"\x0fbase_sync.proto\x12\x04dvpn\"\xad\x01\n" +
	"\x12RemoteSuperRequest\x12#\n" +
	"\rtarget_region\x18\x01 \x01(\tR\ftargetRegion\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x126\n" +
	"\x17required_bandWidth_mbps\x18\x03 \x01(\x02R\x15requiredBandWidthMbps\x12$\n" +
	"\x0emax_latency_ms\x18\x04 \x01(\x02R\fmaxLatencyMs\"\xe3\x01\n" +
	"\rSuperNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\tR\x04port\x12\x16\n" +
	"\x06region\x18\x04 \x01(\tR\x06region\x12$\n" +
	"\x0eavg_latency_ms\x18\x05 \x01(\x02R\favgLatencyMs\x120\n" +
	"\x14exit_peers_available\x18\x06 \x01(\x05R\x12exitPeersAvailable\x12%\n" +
	"\x0ebandWidth_mbps\x18\a \x01(\x02R\rbandWidthMbps\"K\n" +
	"\x13RemoteSuperResponse\x124\n" +
	"\vsuper_nodes\x18\x01 \x03(\v2\x13.dvpn.SuperNodeInfoR\n" +
	"superNodes2g\n" +
	"\x15BaseFederationService\x12N\n" +
	"\x17RequestRemoteSuperNodes\x12\x18.dvpn.RemoteSuperRequest\x1a\x19.dvpn.RemoteSuperResponseB\x05Z\x03/pbb\x06proto3"

var (
	file_base_sync_proto_rawDescOnce sync.Once
	file_base_sync_proto_rawDescData []byte
)

func file_base_sync_proto_rawDescGZIP() []byte {
	file_base_sync_proto_rawDescOnce.Do(func() {
		file_base_sync_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_base_sync_proto_rawDesc), len(file_base_sync_proto_rawDesc)))
	})
	return file_base_sync_proto_rawDescData
}

var file_base_sync_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_base_sync_proto_goTypes = []any{
	(*RemoteSuperRequest)(nil),  // 0: dvpn.RemoteSuperRequest
	(*SuperNodeInfo)(nil),       // 1: dvpn.SuperNodeInfo
	(*RemoteSuperResponse)(nil), // 2: dvpn.RemoteSuperResponse
}
var file_base_sync_proto_depIdxs = []int32{
	1, // 0: dvpn.RemoteSuperResponse.super_nodes:type_name -> dvpn.SuperNodeInfo
	0, // 1: dvpn.BaseFederationService.RequestRemoteSuperNodes:input_type -> dvpn.RemoteSuperRequest
	2, // 2: dvpn.BaseFederationService.RequestRemoteSuperNodes:output_type -> dvpn.RemoteSuperResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_base_sync_proto_init() }
func file_base_sync_proto_init() {
	if File_base_sync_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_base_sync_proto_rawDesc), len(file_base_sync_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_base_sync_proto_goTypes,
		DependencyIndexes: file_base_sync_proto_depIdxs,
		MessageInfos:      file_base_sync_proto_msgTypes,
	}.Build()
	File_base_sync_proto = out.File
	file_base_sync_proto_goTypes = nil
	file_base_sync_proto_depIdxs = nil
}
