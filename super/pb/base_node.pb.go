// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: base_node.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	PublicKey     string                 `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature     string                 `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce         string                 `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	MaxPeers      int32                  `protobuf:"varint,7,opt,name=max_peers,json=maxPeers,proto3" json:"max_peers,omitempty"`
	Version       string                 `protobuf:"bytes,8,opt,name=version,proto3" json:"version,omitempty"`
	StartupTime   string                 `protobuf:"bytes,9,opt,name=startup_time,json=startupTime,proto3" json:"startup_time,omitempty"`
	Port          string                 `protobuf:"bytes,10,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_base_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegisterRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegisterRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *RegisterRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *RegisterRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *RegisterRequest) GetMaxPeers() int32 {
	if x != nil {
		return x.MaxPeers
	}
	return 0
}

func (x *RegisterRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegisterRequest) GetStartupTime() string {
	if x != nil {
		return x.StartupTime
	}
	return ""
}

func (x *RegisterRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AssignedId    string                 `protobuf:"bytes,3,opt,name=assigned_id,json=assignedId,proto3" json:"assigned_id,omitempty"`
	RegisteredAt  string                 `protobuf:"bytes,4,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_base_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterResponse) GetAssignedId() string {
	if x != nil {
		return x.AssignedId
	}
	return ""
}

func (x *RegisterResponse) GetRegisteredAt() string {
	if x != nil {
		return x.RegisteredAt
	}
	return ""
}

type HeartbeatRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NodeId             string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ActivePeers        int32                  `protobuf:"varint,2,opt,name=active_peers,json=activePeers,proto3" json:"active_peers,omitempty"`
	ExitPeersAvailable int32                  `protobuf:"varint,3,opt,name=exit_peers_available,json=exitPeersAvailable,proto3" json:"exit_peers_available,omitempty"`
	AvgLatencyMs       float32                `protobuf:"fixed32,4,opt,name=avg_latency_ms,json=avgLatencyMs,proto3" json:"avg_latency_ms,omitempty"`
	BandwidthUsageMbps float32                `protobuf:"fixed32,5,opt,name=bandwidth_usage_mbps,json=bandwidthUsageMbps,proto3" json:"bandwidth_usage_mbps,omitempty"`
	Timestamp          string                 `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_base_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetActivePeers() int32 {
	if x != nil {
		return x.ActivePeers
	}
	return 0
}

func (x *HeartbeatRequest) GetExitPeersAvailable() int32 {
	if x != nil {
		return x.ExitPeersAvailable
	}
	return 0
}

func (x *HeartbeatRequest) GetAvgLatencyMs() float32 {
	if x != nil {
		return x.AvgLatencyMs
	}
	return 0
}

func (x *HeartbeatRequest) GetBandwidthUsageMbps() float32 {
	if x != nil {
		return x.BandwidthUsageMbps
	}
	return 0
}

func (x *HeartbeatRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Received      bool                   `protobuf:"varint,1,opt,name=received,proto3" json:"received,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_base_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{3}
}

func (x *Ack) GetReceived() bool {
	if x != nil {
		return x.Received
	}
	return false
}

func (x *Ack) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SuperNode struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeId          string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Region          string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Ip              string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Version         string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	LatestHeartbeat string                 `protobuf:"bytes,5,opt,name=latest_heartbeat,json=latestHeartbeat,proto3" json:"latest_heartbeat,omitempty"`
	IsAlive         bool                   `protobuf:"varint,6,opt,name=is_alive,json=isAlive,proto3" json:"is_alive,omitempty"`
	Port            string                 `protobuf:"bytes,7,opt,name=port,proto3" json:"port,omitempty"`
	AvgLatencyMs    float32                `protobuf:"fixed32,8,opt,name=avg_latency_ms,json=avgLatencyMs,proto3" json:"avg_latency_ms,omitempty"`
	BandwidthMbps   float32                `protobuf:"fixed32,9,opt,name=bandwidth_mbps,json=bandwidthMbps,proto3" json:"bandwidth_mbps,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SuperNode) Reset() {
	*x = SuperNode{}
	mi := &file_base_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuperNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperNode) ProtoMessage() {}

func (x *SuperNode) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperNode.ProtoReflect.Descriptor instead.
func (*SuperNode) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{4}
}

func (x *SuperNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *SuperNode) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SuperNode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SuperNode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SuperNode) GetLatestHeartbeat() string {
	if x != nil {
		return x.LatestHeartbeat
	}
	return ""
}

func (x *SuperNode) GetIsAlive() bool {
	if x != nil {
		return x.IsAlive
	}
	return false
}

func (x *SuperNode) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SuperNode) GetAvgLatencyMs() float32 {
	if x != nil {
		return x.AvgLatencyMs
	}
	return 0
}

func (x *SuperNode) GetBandwidthMbps() float32 {
	if x != nil {
		return x.BandwidthMbps
	}
	return 0
}

type SuperNodeList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*SuperNode           `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuperNodeList) Reset() {
	*x = SuperNodeList{}
	mi := &file_base_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuperNodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperNodeList) ProtoMessage() {}

func (x *SuperNodeList) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperNodeList.ProtoReflect.Descriptor instead.
func (*SuperNodeList) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{5}
}

func (x *SuperNodeList) GetNodes() []*SuperNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ExitRegionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DesiredRegion    string                 `protobuf:"bytes,1,opt,name=desired_region,json=desiredRegion,proto3" json:"desired_region,omitempty"`
	MinBandwidthMbps float32                `protobuf:"fixed32,2,opt,name=min_bandwidth_mbps,json=minBandwidthMbps,proto3" json:"min_bandwidth_mbps,omitempty"`
	MaxLatencyMs     float32                `protobuf:"fixed32,3,opt,name=max_latency_ms,json=maxLatencyMs,proto3" json:"max_latency_ms,omitempty"`
	Count            int32                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExitRegionRequest) Reset() {
	*x = ExitRegionRequest{}
	mi := &file_base_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRegionRequest) ProtoMessage() {}

func (x *ExitRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRegionRequest.ProtoReflect.Descriptor instead.
func (*ExitRegionRequest) Descriptor() ([]byte, []int) {
	return file_base_node_proto_rawDescGZIP(), []int{6}
}

func (x *ExitRegionRequest) GetDesiredRegion() string {
	if x != nil {
		return x.DesiredRegion
	}
	return ""
}

func (x *ExitRegionRequest) GetMinBandwidthMbps() float32 {
	if x != nil {
		return x.MinBandwidthMbps
	}
	return 0
}

func (x *ExitRegionRequest) GetMaxLatencyMs() float32 {
	if x != nil {
		return x.MaxLatencyMs
	}
	return 0
}

func (x *ExitRegionRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_base_node_proto protoreflect.FileDescriptor

const file_base_node_proto_rawDesc = "" +
	"\n" +
	"\x0fbase_node.proto\x12\x04dvpn\x1a\x1bgoogle/protobuf/empty.proto\"\x93\x02\n" +
	"\x0fRegisterRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x1d\n" +
	"\n" +
	"public_key\x18\x04 \x01(\tR\tpublicKey\x12\x1c\n" +
	"\tsignature\x18\x05 \x01(\tR\tsignature\x12\x14\n" +
	"\x05nonce\x18\x06 \x01(\tR\x05nonce\x12\x1b\n" +
	"\tmax_peers\x18\a \x01(\x05R\bmaxPeers\x12\x18\n" +
	"\aversion\x18\b \x01(\tR\aversion\x12!\n" +
	"\fstartup_time\x18\t \x01(\tR\vstartupTime\x12\x12\n" +
	"\x04port\x18\n" +
	" \x01(\tR\x04port\"\x8c\x01\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vassigned_id\x18\x03 \x01(\tR\n" +
	"assignedId\x12#\n" +
	"\rregistered_at\x18\x04 \x01(\tR\fregisteredAt\"\xf6\x01\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12!\n" +
	"\factive_peers\x18\x02 \x01(\x05R\vactivePeers\x120\n" +
	"\x14exit_peers_available\x18\x03 \x01(\x05R\x12exitPeersAvailable\x12$\n" +
	"\x0eavg_latency_ms\x18\x04 \x01(\x02R\favgLatencyMs\x120\n" +
	"\x14bandwidth_usage_mbps\x18\x05 \x01(\x02R\x12bandwidthUsageMbps\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\tR\ttimestamp\";\n" +
	"\x03Ack\x12\x1a\n" +
	"\breceived\x18\x01 \x01(\bR\breceived\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x8d\x02\n" +
	"\tSuperNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12)\n" +
	"\x10latest_heartbeat\x18\x05 \x01(\tR\x0flatestHeartbeat\x12\x19\n" +
	"\bis_alive\x18\x06 \x01(\bR\aisAlive\x12\x12\n" +
	"\x04port\x18\a \x01(\tR\x04port\x12$\n" +
	"\x0eavg_latency_ms\x18\b \x01(\x02R\favgLatencyMs\x12%\n" +
	"\x0ebandwidth_mbps\x18\t \x01(\x02R\rbandwidthMbps\"6\n" +
	"\rSuperNodeList\x12%\n" +
	"\x05nodes\x18\x01 \x03(\v2\x0f.dvpn.SuperNodeR\x05nodes\"\xa4\x01\n" +
	"\x11ExitRegionRequest\x12%\n" +
	"\x0edesired_region\x18\x01 \x01(\tR\rdesiredRegion\x12,\n" +
	"\x12min_bandwidth_mbps\x18\x02 \x01(\x02R\x10minBandwidthMbps\x12$\n" +
	"\x0emax_latency_ms\x18\x03 \x01(\x02R\fmaxLatencyMs\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count2\x95\x02\n" +
	"\x0fBaseNodeService\x12B\n" +
	"\x11RegisterSuperNode\x12\x15.dvpn.RegisterRequest\x1a\x16.dvpn.RegisterResponse\x127\n" +
	"\x12SuperNodeHeartbeat\x12\x16.dvpn.HeartbeatRequest\x1a\t.dvpn.Ack\x12B\n" +
	"\x13GetActiveSuperNodes\x12\x16.google.protobuf.Empty\x1a\x13.dvpn.SuperNodeList\x12A\n" +
	"\x11RequestExitRegion\x12\x17.dvpn.ExitRegionRequest\x1a\x13.dvpn.SuperNodeListB\x06Z\x04./pbb\x06proto3"

var (
	file_base_node_proto_rawDescOnce sync.Once
	file_base_node_proto_rawDescData []byte
)

func file_base_node_proto_rawDescGZIP() []byte {
	file_base_node_proto_rawDescOnce.Do(func() {
		file_base_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_base_node_proto_rawDesc), len(file_base_node_proto_rawDesc)))
	})
	return file_base_node_proto_rawDescData
}

var file_base_node_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_base_node_proto_goTypes = []any{
	(*RegisterRequest)(nil),   // 0: dvpn.RegisterRequest
	(*RegisterResponse)(nil),  // 1: dvpn.RegisterResponse
	(*HeartbeatRequest)(nil),  // 2: dvpn.HeartbeatRequest
	(*Ack)(nil),               // 3: dvpn.Ack
	(*SuperNode)(nil),         // 4: dvpn.SuperNode
	(*SuperNodeList)(nil),     // 5: dvpn.SuperNodeList
	(*ExitRegionRequest)(nil), // 6: dvpn.ExitRegionRequest
	(*emptypb.Empty)(nil),     // 7: google.protobuf.Empty
}
var file_base_node_proto_depIdxs = []int32{
	4, // 0: dvpn.SuperNodeList.nodes:type_name -> dvpn.SuperNode
	0, // 1: dvpn.BaseNodeService.RegisterSuperNode:input_type -> dvpn.RegisterRequest
	2, // 2: dvpn.BaseNodeService.SuperNodeHeartbeat:input_type -> dvpn.HeartbeatRequest
	7, // 3: dvpn.BaseNodeService.GetActiveSuperNodes:input_type -> google.protobuf.Empty
	6, // 4: dvpn.BaseNodeService.RequestExitRegion:input_type -> dvpn.ExitRegionRequest
	1, // 5: dvpn.BaseNodeService.RegisterSuperNode:output_type -> dvpn.RegisterResponse
	3, // 6: dvpn.BaseNodeService.SuperNodeHeartbeat:output_type -> dvpn.Ack
	5, // 7: dvpn.BaseNodeService.GetActiveSuperNodes:output_type -> dvpn.SuperNodeList
	5, // 8: dvpn.BaseNodeService.RequestExitRegion:output_type -> dvpn.SuperNodeList
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_base_node_proto_init() }
func file_base_node_proto_init() {
	if File_base_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_base_node_proto_rawDesc), len(file_base_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_base_node_proto_goTypes,
		DependencyIndexes: file_base_node_proto_depIdxs,
		MessageInfos:      file_base_node_proto_msgTypes,
	}.Build()
	File_base_node_proto = out.File
	file_base_node_proto_goTypes = nil
	file_base_node_proto_depIdxs = nil
}
